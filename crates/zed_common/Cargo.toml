[package]
name = "zed_common"
version = "0.1.0"
edition = "2021"
publish = false
license = "GPL-3.0-or-later"

[lints]
workspace = true

[features]
default = []
stories = ["dep:story"]
neovim = ["nvim-rs", "async-compat", "tokio"]
test-support = [
    "call/test-support",
    "client/test-support",
    "collections/test-support",
    "editor/test-support",
    "gpui/test-support",
    "http_client/test-support",
    "language/test-support",
    "project/test-support",
    "settings/test-support",
    "text/test-support",
    "util/test-support",
    "workspace/test-support",
]

[dependencies]
alacritty_terminal.workspace = true
anthropic = { workspace = true, features = ["schemars"] }
anyhow.workspace = true
arrayvec.workspace = true
assets.workspace = true
assistant_tool.workspace = true
async-compat = { workspace = true, optional = true }
async-dispatcher.workspace = true
async-trait.workspace = true
async-watch.workspace = true
base64.workspace = true
blake3.workspace = true
call.workspace = true
cargo_toml.workspace = true
channel.workspace = true
chrono.workspace = true
client.workspace = true
clock.workspace = true
collections.workspace = true
command_palette.workspace = true
command_palette_hooks.workspace = true
context_servers.workspace = true
copilot = { workspace = true, features = ["schemars"] }
db.workspace = true
derive_more.workspace = true
dirs.workspace = true
editor.workspace = true
emojis.workspace = true
extension_host.workspace = true
feature_flags.workspace = true
feedback.workspace = true
file_icons.workspace = true
fs.workspace = true
futures-batch.workspace = true
futures.workspace = true
fuzzy.workspace = true
git.workspace = true
globset.workspace = true
google_ai = { workspace = true, features = ["schemars"] }
gpui.workspace = true
handlebars.workspace = true
heed.workspace = true
html_to_markdown.workspace = true
http_client.workspace = true
image.workspace = true
indexed_docs.workspace = true
indexmap.workspace = true
indoc.workspace = true
install_cli.workspace = true
itertools.workspace = true
language.workspace = true
log.workspace = true
lsp.workspace = true
markdown.workspace = true
markdown_preview.workspace = true
menu.workspace = true
multi_buffer.workspace = true
nbformat.workspace = true
notifications.workspace = true
num-format.workspace = true
nvim-rs = { git = "https://github.com/KillTheMule/nvim-rs", branch = "master", features = ["use_tokio"], optional = true }
ollama = { workspace = true, features = ["schemars"] }
open_ai = { workspace = true, features = ["schemars"] }
ordered-float.workspace = true
outline.workspace = true
parking_lot.workspace = true
paths.workspace = true
picker.workspace = true
project.workspace = true
proto.workspace = true
regex.workspace = true
release_channel.workspace = true
remote.workspace = true
rich_text.workspace = true
rope.workspace = true
rpc.workspace = true
runtimelib.workspace = true
schemars.workspace = true
search.workspace = true
semantic_version.workspace = true
serde.workspace = true
serde_derive.workspace = true
serde_json.workspace = true
settings.workspace = true
sha2.workspace = true
shellexpand.workspace = true
similar.workspace = true
smallvec.workspace = true
smol.workspace = true
snippet_provider.workspace = true
story = { workspace = true, optional = true }
strum.workspace = true
supermaven.workspace = true
task.workspace = true
tasks_ui.workspace = true
telemetry_events.workspace = true
tempfile.workspace = true
terminal.workspace = true
text.workspace = true
theme.workspace = true
thiserror.workspace = true
tiktoken-rs.workspace = true
time.workspace = true
time_format.workspace = true
tokio = { version = "1.15", features = ["full"], optional = true }
toml.workspace = true
tree-sitter.workspace = true
ui.workspace = true
unindent.workspace = true
util.workspace = true
uuid.workspace = true
wasmtime-wasi.workspace = true
which.workspace = true
workspace.workspace = true
worktree.workspace = true
zed_actions.workspace = true

[dev-dependencies]
async-compression.workspace = true
async-tar.workspace = true
call = { workspace = true, features = ["test-support"] }
client = { workspace = true, features = ["test-support"] }
collections = { workspace = true, features = ["test-support"] }
ctor.workspace = true
editor = { workspace = true, features = ["test-support"] }
env_logger.workspace = true
extension_host = {workspace = true, features = ["test-support"] }
fs = { workspace = true, features = ["test-support"] }
gpui = { workspace = true, features = ["test-support"] }
http_client = { workspace = true, features = ["test-support"] }
indexed_docs.workspace = true
indoc.workspace = true
language = { workspace = true, features = ["test-support"] }
languages = { workspace = true, features = ["test-support"] }
log.workspace = true
lsp = { workspace = true, features = ["test-support"] }
node_runtime.workspace = true
notifications = { workspace = true, features = ["test-support"] }
parking_lot.workspace = true
picker = { workspace = true, features = ["test-support"] }
pretty_assertions.workspace = true
project = { workspace = true, features = ["test-support"] }
proto = { workspace = true, features = ["test-support"] }
rand.workspace = true
reqwest_client.workspace = true
rpc = { workspace = true, features = ["test-support"] }
search = { workspace = true, features = ["test-support"] }
serde_json.workspace = true
serde_json_lenient.workspace = true
settings = { workspace = true, features = ["test-support"] }
text = { workspace = true, features = ["test-support"] }
theme = { workspace = true, features = ["test-support"] }
tree-sitter-md.workspace = true
tree-sitter-python.workspace = true
tree-sitter-typescript.workspace = true
unindent.workspace = true
util = { workspace = true, features = ["test-support"] }
workspace = { workspace = true, features = ["test-support"] }
